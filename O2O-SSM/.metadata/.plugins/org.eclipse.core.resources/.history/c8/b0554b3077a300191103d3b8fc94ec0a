package com.imooc.o2o.dao;

import static org.junit.Assert.*;

import java.util.Date;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.springframework.beans.factory.annotation.Autowired;

import com.hly.o2o.BaseTest;
import com.hly.o2o.dao.LocalAuthDao;
import com.hly.o2o.entity.LocalAuth;
import com.hly.o2o.entity.PersonInfo;
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class LocalAuthDaoTest extends BaseTest{
	@Autowired
	private LocalAuthDao localAuthDao;
	private static final String username="test";
	                                            
	private static final String password="5q5y6les2650s626ebss2s565652l2y6";
	
	@Test
	
	public void testAInsertLocalAuth() throws Exception{
		//新增一条平台信息
		LocalAuth localAuth=new LocalAuth();
		PersonInfo personInfo=new PersonInfo();
		personInfo.setUserId(1L);
		//给平台账号绑定上用户信息
		localAuth.setPersonInfo(personInfo);
		//设置用户名密码
		localAuth.setUsername(username);
		localAuth.setPassword(password);
		localAuth.setCreateTime(new Date());
		int effectNum = localAuthDao.insertLocalAuth(localAuth);
		assertEquals(1,effectNum);
		
	}
	@Test
	public void testBQueryLocalByUserNameAndPwd(){
		//按照用户名和密码进行查询
		LocalAuth localAuth = localAuthDao.queryLocalByUserNameAndPwd(username, password);
		assertEquals("测试",localAuth.getPersonInfo().getName());
		
		
	}
	@Test
	public void testCQueryLocalByUserId(){
		//按照用户id查询
		LocalAuth localAuth = localAuthDao.queryLocalByUserId(1L);
		assertEquals("测试",localAuth.getPersonInfo().getName());
		
		
	}
	@Test
	public void testDUpdateLocalAuth(){
		Date now=new Date();
		int effectNum = localAuthDao.updateLocalAuth(1L, username, password,password, now);
		assertEquals(1,effectNum);
		
		//输出新密码
		LocalAuth LocalAuth = localAuthDao.queryLocalByUserId(1L);
		System.out.println(LocalAuth.getPassword());
		
	}
	
	
	

}
